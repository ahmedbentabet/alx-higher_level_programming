# tests/2-matrix_divided.txt

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([2])
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided()
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided([[2, 3], [ 5, 9]], 6)
[[0.33, 0.5], [0.83, 1.5]]

>>> matrix_divided([[2, 3], [ 5, 9]], "hamada")
Traceback (most recent call last):
	...
TypeError: div must be a number

>>> matrix_divided([[2, 3], [ 5, 9]], 0)
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero

>>> matrix_divided([["today", 3], [ 5, 9]], 3)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[3], [ 5, 9]], 3)
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[3, 8], [ 5, 9]], float('inf'))
[[0.0, 0.0], [0.0, 0.0]]

>>> matrix_divided([[3, 8], [ 5, 9]], float('nan'))
[[nan, nan], [nan, nan]]

>>> matrix_divided([[float('inf'), 8], [ 5, 9]], 3)
[[inf, 2.67], [1.67, 3.0]]

>>> matrix_divided([[float('nan'), 8], [ 5, 9]], 3)
[[nan, 2.67], [1.67, 3.0]]

